// <auto-generated />
using System;
using AcutrackFulfillment.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AcutrackFulfillment.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190806174804_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AcutrackFulfillmentCore.Entities.OrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OrderStatuses");
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalPONumber");

                    b.Property<int>("ClientGatewayId");

                    b.Property<int?>("ClientShopId");

                    b.Property<Guid?>("Data_identifier");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<bool?>("FulFillFlag");

                    b.Property<int>("InvoiceId");

                    b.Property<int>("OrderStatusId");

                    b.Property<string>("PONumber");

                    b.Property<int?>("ShipmentConfirmation");

                    b.Property<string>("UpdateStatusReason");

                    b.Property<bool?>("UseShopAccount");

                    b.Property<bool?>("Valid");

                    b.HasKey("Id");

                    b.HasIndex("OrderStatusId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BomDynamicId");

                    b.Property<string>("BomId");

                    b.Property<bool?>("CopyProtection");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int?>("OrderId");

                    b.Property<int>("ProductId");

                    b.Property<int>("ProductSkuId");

                    b.Property<int>("Quantity");

                    b.Property<int>("StatusId");

                    b.Property<int>("WarehouseId");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.ShippingInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId");

                    b.Property<string>("AmazonShipmentId");

                    b.Property<int>("CarrierServiceId");

                    b.Property<int>("ContactId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateModified");

                    b.Property<int?>("OrderId");

                    b.Property<bool?>("SaturdayDelivery");

                    b.Property<string>("ShipDynamicId");

                    b.Property<bool?>("SignatureConfirmation");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("ShippingInfo");
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.Order", b =>
                {
                    b.HasOne("AcutrackFulfillmentCore.Entities.OrderStatus", "orderStatus")
                        .WithMany()
                        .HasForeignKey("OrderStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("AcutrackFulfillmentCore.OrderAggregate.Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("AcutrackFulfillmentCore.OrderAggregate.ShippingInfo", b =>
                {
                    b.HasOne("AcutrackFulfillmentCore.OrderAggregate.Order")
                        .WithMany("ShippingInfos")
                        .HasForeignKey("OrderId");
                });
#pragma warning restore 612, 618
        }
    }
}
